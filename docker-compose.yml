version: '3.7'

services:
  app: &app
    image: community_app:0.0.1
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: ${RUBY_VERSION:-2.6.5}
        BUNDLER_VERSION: 2.0.2
        NODE_VERSION: ${NODE_VERSION:-12.15.0-r1}
        YARN_VERSION: ${YARN_VERSION:-1.19.2-r0}
    volumes:
      - .:/app:cached
      - rails_cache_data:/app/tmp/cache
      - bundle_data:/usr/local/bundle
      - node_modules_data:/app/node_modules
      - packs_data:/app/public/packs
      - ./log:/app/log

  web: &web
    <<: *app
    stdin_open: true
    tty: true
    ports:
      - 3000:3000
    environment:
      TZ: Europe/Berlin
      RAILS_ENV: ${RAILS_ENV:-development}
      NODE_ENV: ${NODE_ENV:-development}
      WEBPACKER_DEV_SERVER_HOST: ${WEBPACKER_DEV_SERVER_HOST:-webpacker}
      BOOTSNAP_CACHE_DIR: /usr/local/bundle/bootsnap
      WEB_CONCURRENCY: ${WEB_CONCURRENCY:-5}
      MEMCACHIER_SERVERS: ${MEMCACHIER_SERVERS:-memcached}
      EDITOR: vim
    networks:
      - community_app
    depends_on:
      - webpacker
      - postgres
      - redis
      - memcached

  test:
    <<: *web
    command: rails test
    environment:
      TZ: Europe/Berlin
      RAILS_ENV: test
      NODE_ENV: test

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - 3035:3035
    environment:
      TZ: Europe/Berlin
      RAILS_ENV: ${RAILS_ENV:-development}
      NODE_ENV: ${NODE_ENV:-development}
    networks:
      - community_app

  guard:
    <<: *app
    command: guard
    environment:
      TZ: Europe/Berlin
      RAILS_ENV: ${RAILS_ENV:-development}
    networks:
      - community_app

  postgres:
    image: postgres:12.1-alpine
    env_file: .env
    ports:
      - 5432:5432
    environment:
      TZ: Europe/Berlin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - community_app
    restart: always

  redis:
    image: redis:5.0-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: Europe/Berlin
    volumes:
      - redis_data:/data
    networks:
      - community_app
    restart: always

  memcached:
    image: memcached:1.6-alpine
    environment:
      TZ: Europe/Berlin
    networks:
      - community_app
    restart: always

volumes:
  rails_cache_data:
  bundle_data:
  node_modules_data:
  packs_data:
  postgres_data:
  redis_data:

networks:
  community_app:
    name: community_app
